{"version":3,"sources":["webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.5.1@swiper/dist/js/swiper.esm.bundle.js","webpack:///src/page/footer/Take.vue","webpack:///./src/page/footer/Take.vue?016e","webpack:///./src/page/footer/Take.vue"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","autoplay","running","paused","run","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","render","get","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","swiper_esm_bundle","Take","Head","Foot","footer","shops","flag","jiazai","loading","finished","checked","userid","geohash","latitude","longitude","num","created","_this","localStorage","getItem","$route","_axios_0_19_0_axios_default","then","res","getStr","sum","mounted","$store","methods","str","onLoad","_this2","concat","details","v","$router","id","footer_Take","_vm","_h","$createElement","_c","_self","staticClass","slot","_v","_s","_e","color","vertical","_l","image_url","title","_m","finished-text","model","$$v","expression","$event","image_path","item","icon_name","allow-half","void-icon","void-color","aria-setsize","$set","rating","recent_order_num","float_minimum_order_amount","float_delivery_fee","order_lead_time","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/20.8b09b461f8df459135eb.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.5.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 13, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (\n        (params.slidesPerColumnFill === 'column')\n        || (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1)\n      ) {\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection} wp8-${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_swiper@4.5.1@swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"take\">\r\n    <!-- 头部开始 -->\r\n     \r\n    <header>\r\n      <Head>\r\n        <div slot='a' class=\"he shou_he\">\r\n          <div class=\"left\">\r\n            <router-link to=\"/Sou\">\r\n              <!-- <a-Icon type=\"search\" class=\"search\"/>\r\n               -->\r\n               <i class=\"iconfont iconsousuo\"></i>\r\n            </router-link>\r\n          </div>\r\n          <div class=\"content\">\r\n            {{this.$route.query.name}}\r\n            <!-- {{name}}  -->\r\n          </div>\r\n          <div class=\"right\">\r\n            <router-link to=\"/Login\" v-if='checked==false'>登录注册</router-link>\r\n            <router-link to=\"/login\" v-if=\"checked==true\">\r\n              <a-Icon type=\"user\" class=\"user\"/>\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n      </Head>\r\n\r\n      <!-- <Head luyou=\"/Sou\" luyou2=\"/login\" :left=left :content=$route.query.name :icon=icon :login=login></Head> -->\r\n    </header>\r\n    <!-- 头部结束 -->\r\n     <!-- 内容开始 -->\r\n    <van-loading type=\"spinner\" color=\"#1989fa\" v-if=\"jiazai\" class=\"van\" vertical/>\r\n     <div class=\"shou_content\">\r\n       <!-- 导航开始 -->\r\n       <div class=\"shou_nav swiper-container\">\r\n         <div class=\"swiper-wrapper\">\r\n           <div class=\"swiper-slide shou_nav_n\">\r\n             <ul v-for='(v,i) in swiper[0]' :key=\"i\">\r\n               <img :src=\"'https://fuss10.elemecdn.com'+v.image_url\" />\r\n               <li>{{v.title}}</li>\r\n             </ul>\r\n           </div>\r\n           <div class=\"swiper-slide shou_nav_n\">\r\n             <ul v-for='(v,i) in swiper[1]' :key=\"i\">\r\n               <img :src=\"'https://fuss10.elemecdn.com'+v.image_url\" />\r\n               <li>{{v.title}}</li>\r\n             </ul>\r\n           </div>\r\n         </div>\r\n         <div class=\"swiper-pagination\"></div>>\r\n       </div>\r\n       <!-- 导航结束 -->\r\n       <!-- 附近商家开始 -->\r\n       \r\n\r\n       <div class=\"shops\">\r\n         <div class=\"fujin\">\r\n           <i class=\"el-icon-shopping-cart-1\"></i>\r\n           附近商家\r\n         </div>\r\n         <!-- 单个商家开始 -->\r\n        \r\n          <van-list\r\n          v-model=\"loading\"\r\n          :finished=\"finished\"\r\n          finished-text=\"没有更多了\"\r\n          @load=\"onLoad\"\r\n          >\r\n         <div class=\"shops_one\" v-for='(v,i) in shops' :key=\"i\" @click=\"details(v)\">\r\n          \r\n         \r\n           <div class=\"one_a\"><img :src=\"'https://elm.cangdu.org/img/'+v.image_path\" /></div>\r\n           <ul>\r\n             <li class=\"ul_a\">\r\n               <div class=\"li_left\">\r\n                 <div>品牌</div>\r\n                 <h3>{{v.name}}</h3>\r\n               </div>\r\n               <div class=\"li_right\">\r\n                 <div v-for='(item,value) in v.supports' :key=\"value\">{{item.icon_name}}</div>\r\n               </div>\r\n             </li>\r\n             <li class=\"ul_b\">\r\n               <div class=\"li_left\">\r\n                <van-rate\r\n                    v-model=\"v.rating\"\r\n                    allow-half\r\n                    void-icon=\"star\"\r\n                    void-color=\"#eee\"\r\n                    aria-setsize=\"1\"\r\n                    size=\"10px\"\r\n                />\r\n                 <div class=\"left_rating\">{{v.rating}}</div>\r\n                 <div class=\"left_num\">月售{{v.recent_order_num}}单</div>\r\n               </div>\r\n               <div class=\"li_right\">\r\n                 <div class=\"right_text\">蜂鸟专送</div>\r\n                 <div class=\"right_name\">准时达</div>\r\n               </div>\r\n             </li>\r\n             <li class=\"ul_c\">\r\n               <div class=\"li_left\">￥{{v.float_minimum_order_amount}} / 配送费约￥{{v.float_delivery_fee}}</div>\r\n               <div class=\"li_right\">{{v.distance}} / <span>{{v.order_lead_time}}</span></div>\r\n             </li>\r\n           </ul>\r\n         </div>\r\n         <!-- 单个商家结束 -->\r\n         </van-list>\r\n       </div>\r\n       <!-- 附近商家结束 -->\r\n      \r\n         \r\n\r\n     </div>\r\n     <!-- 内容结束 -->\r\n     <Foot></Foot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import Head from '@/page/header/Head'\r\n  import Foot from '@/hand/footer'\r\n  import Swiper from 'swiper'\r\n  import axios from 'axios'\r\n  export default {\r\n    name: 'Take',\r\n    components:{Head,Foot},\r\n    data() {\r\n      return {\r\n        swiper:[], // 轮播\r\n        shops:[], // 附近商家\r\n        flag:false,\r\n        name:'',\r\n       jiazai:false,\r\n        loading: false,\r\n      finished: false,\r\n      checked:\"\",\r\n       userid:\"\",\r\n        geohash:\"\",\r\n        latitude:\"\",\r\n        longitude:\"\",\r\n        num:0\r\n      }\r\n    },\r\n    created() {\r\n\r\n      if(localStorage.getItem('login')){\r\n      this.flag = true\r\n      }\r\n     this.name=this.$route.query.name\r\n\r\n\r\n      // 获取轮播数据\r\n      axios.get('http://elm.cangdu.org/v2/index_entry?geohash='+`${this.$route.query.geohash}`+'&group_type=1&flags[]=F').then((res)=>{\r\n        // console.log(res.data)\r\n        this.swiper=this.getStr(res.data)\r\n      }).then(()=>{\r\n        new Swiper ('.swiper-container', {\r\n          loop: true,\r\n          pagination: {\r\n            el: '.swiper-pagination',\r\n          },\r\n        })\r\n      })\r\n\r\n      // 附近商家\r\n      this.jiazai=true\r\n      \r\n      axios.get(`http://elm.cangdu.org/shopping/restaurants?latitude='${this.latitude}'&longitude='${this.longitude}'&offset='${this.sum}'&limit=10&extras[]=activities&keyword=&restaurant_category_id=&restaurant_category_ids[]=&order_by=&delivery_mode[]=`).then((res)=>{\r\n        // console.log(res)\r\n          this.shops=res.data\r\n          this.jiazai=false\r\n      })\r\n\r\n    },\r\n    mounted(){\r\n        this.geohash= this.$route.query;\r\n      this.checked=this.$store.state.checked;\r\n      this.latitude=this.$store.state.latitude;\r\n      this.longitude=this.$store.state.longitude;\r\n    },\r\n    methods:{\r\n      // 轮播切分数组\r\n        getStr(str) {\r\n            var arr = [];\r\n            for (var i = 0, j = 0; i < str.length; i += 8, j++) {\r\n                arr[j] = str.slice(i, i + 8);\r\n            }\r\n            return arr;\r\n        },\r\n         onLoad() {\r\n            // 异步更新数据\r\n            setTimeout(() => {\r\n              \r\n              this.num=this.num+10;\r\n            axios.get(`http://elm.cangdu.org/shopping/restaurants?latitude='${this.latitude}'&longitude='${this.longitude}'&offset=${this.num}&limit=${this.num}&extras[]=activities&keyword=&restaurant_category_id=&restaurant_category_ids[]=&order_by=&delivery_mode[]=`).then((res)=>{\r\n              // console.log(res.data)\r\n             if(this.shops.length<1000){\r\n               this.shops=this.shops.concat(res.data)\r\n             }\r\n             \r\n            })\r\n              // 加载状态结束\r\n              this.loading = false;\r\n\r\n              // 数据全部加载完成\r\n              if (this.shops.length >= 1000) {\r\n                this.finished = true;\r\n              }\r\n            }, 2000);\r\n    },\r\n    details(v){\r\n      this.$router.push(`/shipping?id=${v.id}`)\r\n    }\r\n      \r\n    }\r\n  }\r\n    \r\n  \r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    //  .take{position: fixed;top: 0;}\r\n      .iconsousuo{\r\n        color: white;font-size: 0.2rem;\r\n      }\r\n    //  .van{position: absolute;top: 3rem;left:2rem;}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/page/footer/Take.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"take\"},[_c('header',[_c('Head',[_c('div',{staticClass:\"he shou_he\",attrs:{\"slot\":\"a\"},slot:\"a\"},[_c('div',{staticClass:\"left\"},[_c('router-link',{attrs:{\"to\":\"/Sou\"}},[_c('i',{staticClass:\"iconfont iconsousuo\"})])],1),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_vm._v(\"\\n          \"+_vm._s(this.$route.query.name)+\"\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"right\"},[(_vm.checked==false)?_c('router-link',{attrs:{\"to\":\"/Login\"}},[_vm._v(\"登录注册\")]):_vm._e(),_vm._v(\" \"),(_vm.checked==true)?_c('router-link',{attrs:{\"to\":\"/login\"}},[_c('a-Icon',{staticClass:\"user\",attrs:{\"type\":\"user\"}})],1):_vm._e()],1)])])],1),_vm._v(\" \"),(_vm.jiazai)?_c('van-loading',{staticClass:\"van\",attrs:{\"type\":\"spinner\",\"color\":\"#1989fa\",\"vertical\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"shou_content\"},[_c('div',{staticClass:\"shou_nav swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide shou_nav_n\"},_vm._l((_vm.swiper[0]),function(v,i){return _c('ul',{key:i},[_c('img',{attrs:{\"src\":'https://fuss10.elemecdn.com'+v.image_url}}),_vm._v(\" \"),_c('li',[_vm._v(_vm._s(v.title))])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"swiper-slide shou_nav_n\"},_vm._l((_vm.swiper[1]),function(v,i){return _c('ul',{key:i},[_c('img',{attrs:{\"src\":'https://fuss10.elemecdn.com'+v.image_url}}),_vm._v(\" \"),_c('li',[_vm._v(_vm._s(v.title))])])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"}),_vm._v(\">\\n     \")]),_vm._v(\" \"),_c('div',{staticClass:\"shops\"},[_vm._m(0),_vm._v(\" \"),_c('van-list',{attrs:{\"finished\":_vm.finished,\"finished-text\":\"没有更多了\"},on:{\"load\":_vm.onLoad},model:{value:(_vm.loading),callback:function ($$v) {_vm.loading=$$v},expression:\"loading\"}},_vm._l((_vm.shops),function(v,i){return _c('div',{key:i,staticClass:\"shops_one\",on:{\"click\":function($event){return _vm.details(v)}}},[_c('div',{staticClass:\"one_a\"},[_c('img',{attrs:{\"src\":'https://elm.cangdu.org/img/'+v.image_path}})]),_vm._v(\" \"),_c('ul',[_c('li',{staticClass:\"ul_a\"},[_c('div',{staticClass:\"li_left\"},[_c('div',[_vm._v(\"品牌\")]),_vm._v(\" \"),_c('h3',[_vm._v(_vm._s(v.name))])]),_vm._v(\" \"),_c('div',{staticClass:\"li_right\"},_vm._l((v.supports),function(item,value){return _c('div',{key:value},[_vm._v(_vm._s(item.icon_name))])}),0)]),_vm._v(\" \"),_c('li',{staticClass:\"ul_b\"},[_c('div',{staticClass:\"li_left\"},[_c('van-rate',{attrs:{\"allow-half\":\"\",\"void-icon\":\"star\",\"void-color\":\"#eee\",\"aria-setsize\":\"1\",\"size\":\"10px\"},model:{value:(v.rating),callback:function ($$v) {_vm.$set(v, \"rating\", $$v)},expression:\"v.rating\"}}),_vm._v(\" \"),_c('div',{staticClass:\"left_rating\"},[_vm._v(_vm._s(v.rating))]),_vm._v(\" \"),_c('div',{staticClass:\"left_num\"},[_vm._v(\"月售\"+_vm._s(v.recent_order_num)+\"单\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"li_right\"},[_c('div',{staticClass:\"right_text\"},[_vm._v(\"蜂鸟专送\")]),_vm._v(\" \"),_c('div',{staticClass:\"right_name\"},[_vm._v(\"准时达\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"ul_c\"},[_c('div',{staticClass:\"li_left\"},[_vm._v(\"￥\"+_vm._s(v.float_minimum_order_amount)+\" / 配送费约￥\"+_vm._s(v.float_delivery_fee))]),_vm._v(\" \"),_c('div',{staticClass:\"li_right\"},[_vm._v(_vm._s(v.distance)+\" / \"),_c('span',[_vm._v(_vm._s(v.order_lead_time))])])])])])}),0)],1)]),_vm._v(\" \"),_c('Foot')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fujin\"},[_c('i',{staticClass:\"el-icon-shopping-cart-1\"}),_vm._v(\"\\n         附近商家\\n       \")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-0019af76\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/page/footer/Take.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0019af76\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./Take.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./Take.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./Take.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0019af76\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./Take.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0019af76\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/footer/Take.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}